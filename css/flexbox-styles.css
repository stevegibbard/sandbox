* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.menu-container {
  color: #fff;
  background-color: #5995DA; /* Blue */
  padding: 20px 0;
  display: flex;
  justify-content: center;
}

.menu {
  border: 1px solid #fff;
  width: 900px;
  display: flex;
  justify-content:space-between;
}

.links {
  display: flex;
  justify-content:space-between;
}

.login {
  margin-left: 20px;
}

.am-signup{
  margin-left: auto;
}

.header-container {
  color: #5995DA;
  background-color: #D6E9FE;
  display: flex;
  justify-content: center;
}

.header {
  width: 900px;
  height: 300px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.social,
.subscribe{
  align-self:flex-end;
  margin-bottom: 20px;
}

.photo-grid-container {
  display: flex;
  justify-content: center;
}

.photo-grid {
  width: 900px;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  flex-direction: row;
  align-items: center;
}

.photo-grid-item {
  border: 1px solid #fff;
  width: 300px;
  height: 300px;
}

.first-item{
  order: 1;
}

.last-item{
  order: -1;
}

.footer {
  display: flex;
  justify-content: space-between;
}

.footer-item {
  border: 1px solid #fff;
  background-color: purple;
  height: 200px;
  flex: 1; /* stretch to match width */
}

.footer-one,
.footer-three {
  background-color: #5995DA;
  flex: initial; /* This allows these two items to assume the width below, but the second item to be flexible.  Mixing static width and flexible width items in the same row */
  width: 300px;
  /*flex: 2;*/ /* A different weight allows the third item to be twice the size of the others */
}

.footer-two {
  min-width: 100px;
}
